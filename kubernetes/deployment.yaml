# kind: Secret
# apiVersion: v1
# metadata:
#   name: spacy-gc-credentials
#   labels:
#     app: spacy-api
# type: Opaque
# data:
#   gc_credentials.json: ________
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: spacy-api-config
  labels:
    app: spacy-api
  namespace: default
data:
  server_config.yml: |-
    # Choose which languages to serve
    serve_langs: en, es
    # Details about each language model
    servers:
      en:
        spacy_lang: en_core_web_md
        wv_pretrained_fnm:
        host: 0.0.0.0
        port: 9033
      es:
        spacy_lang: es_core_web_md
        wv_pretrained_fnm:
        host: 0.0.0.0
        port: 9034
      fr:
        spacy_lang: fr_depvec_web_lg
        wv_pretrained_fnm:
        host: 0.0.0.0
        port: 9035
      de:
        spacy_lang: de_core_news_md
        wv_pretrained_fnm:
        host: 0.0.0.0
        port: 9036
---
kind: Service
apiVersion: v1
metadata:
  name: spacy-api-en
  labels:
    app: spacy-api
spec:
  selector:
    app: spacy-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9033
---
kind: Service
apiVersion: v1
metadata:
  name: spacy-api-es
  labels:
    app: spacy-api
spec:
  selector:
    app: spacy-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9034
---
kind: Service
apiVersion: v1
metadata:
  name: spacy-api-fr
  labels:
    app: spacy-api
spec:
  selector:
    app: spacy-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9035
---
kind: Service
apiVersion: v1
metadata:
  name: spacy-api-de
  labels:
    app: spacy-api
spec:
  selector:
    app: spacy-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9036
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: spacy-api
  labels:
    app: spacy-api
spec:
  serviceName: spacy-api
  replicas: 1

  volumeClaimTemplates:
  - metadata:
      name: models-volume
      labels:
        app: spacy-api
      annotations:
        volume.beta.kubernetes.io/storage-class: slow
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi

  template:
    metadata:
      labels:
        app: spacy-api
    spec:
      volumes:
      - name: server-conf
        configMap:
          name: spacy-api-config
      - name: gc-credentials
        secret:
          secretName: spacy-gc-credentials

      initContainers:
      - name: models-download
        image: google/cloud-sdk
        command: ['bash', '-c', 'gcloud auth activate-service-account --key-file=/gc_credentials/gc_credentials.json && gsutil rsync -d -r gs://spacy-models/ /models']
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /gc_credentials/gc_credentials.json
        volumeMounts:
        - name: models-volume
          mountPath: /models
        - name: gc-credentials
          mountPath: /gc_credentials

      containers:
      - name: spacy-api
        image: gcr.io/graphext-0/spacy-api:{{DRONE_COMMIT_SHA}}
        command: [ "bash","-c","source activate spacy_api && python spacy_api/__main__.py server_config.yml" ]
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "30m"
            memory: "3500M"
        volumeMounts:
        - name: server-conf
          mountPath: /app/server_config.yml
          subPath: server_config.yml
        - name: models-volume
          mountPath: /app/models
